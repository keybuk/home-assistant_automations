blueprint:
  name: Light Switch
  description: Synchronize a light and switch
  domain: automation
  input:
    light:
      name: Light
      description: This light will be synchronized with the switch.
      selector:
        entity:
          filter:
            - domain: light
    switch:
      name: Switch
      description: This switch will be synchronized with the light.
      selector:
        entity:
          filter:
            - domain: switch

triggers:
  - trigger: state
    entity_id: !input light
    to: null
    id: light
  - trigger: state
    entity_id: !input switch
    to: null
    id: switch

variables:
  light: !input light
  switch: !input switch

conditions: []

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: light
          - "{{ not is_state(switch, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == 'on' %}
                switch.turn_on
              {% else %}
                switch.turn_off
              {% endif %}
            target:
              entity_id: !input switch
      - conditions:
          - condition: trigger
            id: switch
          - "{{ not is_state(light, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == 'on' %}
                light.turn_on
              {% else %}
                light.turn_off
              {% endif %}
            target:
              entity_id: !input light
mode: queued
