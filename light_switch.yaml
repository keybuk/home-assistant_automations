blueprint:
  name: Switch Lights
  description: Synchronize a switch and light
  domain: automation
  input:
    switch:
      name: Switch
      description: This switch will be synchronized with the light.
      selector:
        entity:
          filter:
            - domain: switch
    light:
      name: Light
      description: This light will be synchronized with the switch.
      selector:
        entity:
          filter:
            - domain: light

triggers:
  - trigger: state
    entity_id: !input switch
    to: null
    id: switch
  - trigger: state
    entity_id: !input light
    to: null
    id: light

variables:
  switch: !input switch
  light: !input light

conditions: []

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: switch
          - condition: not
            conditions:
              - condition: template
                value_template: "{{ is_state(light, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == "on" %}
                light.turn_on
              {% else %}
                light.turn_off
              {% endif %}
            target:
              entity_id: !input light
      - conditions:
          - condition: trigger
            id: light
          - condition: not
            conditions:
              - condition: template
                value_template: "{{ is_state(switch, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == "on" %}
                switch.turn_on
              {% else %}
                switch.turn_off
              {% endif %}
            target:
              entity_id: !input switch
mode: queued
